Document:
    Defi: [Definitions#defs]

Definitions:
    Def: [Definition#def]
    Defs: [Definition#def, Definitions#follow]

Definition:
    O: [OperationDefinition#op]
    F: [FragmentDefinition#frag]
    T: [TypeSystemDefinition#type]

OperationDefinition:
    SelSet: [SelectionSet#ss]
    OT_N_VD: [OperationType#ot, name#name, VariableDefinitions#vd,
        Directives#d, SelectionSet#ss]
    OT_N_V: [OperationType#ot, name#name, VariableDefinitions#vd,
        SelectionSet#ss]
    OT_N_D: [OperationType#ot, name#name, Directives#d, SelectionSet#ss]
    OT_N: [OperationType#ot, name#name, SelectionSet#ss]
    OT_VD: [OperationType#ot, VariableDefinitions#vd, Directives#d,
        SelectionSet#ss]
    OT_V: [OperationType#ot, VariableDefinitions#vd, SelectionSet#ss]
    OT_D: [OperationType#ot, Directives#d, SelectionSet#ss]
    OT: [OperationType#ot, SelectionSet#ss]

SelectionSet:
   SS: [lcurly, Selections#sel, rcurly]

OperationType:
    Query: [query#tok]
    Mutation: [mutation#tok]
    Sub: [subscription#tok]

Selections:
    Sel: [Selection#sel]
    Sels: [Selection#sel, Selections#follow]
    Selsc: [Selection#sel, comma, Selections#follow]

Selection:
    Field: [Field#field]
    Spread: [dots, FragmentSpread#frag]
    IFrag: [dots, InlineFragment#ifrag]

FragmentSpread:
    FD: [name#name, Directives#dirs]
    F: [name#name]

InlineFragment:
    TDS: [on_, name#tc, Directives#dirs, SelectionSet#ss]
    TS: [on_, name#tc, SelectionSet#ss]
    DS: [Directives#dirs, SelectionSet#ss]
    S: [SelectionSet#ss]

# Alias is build into FieldName
Field:
    FADS: [FieldName#name, Arguments#args, Directives#dirs,
        SelectionSet#ss]
    FAS: [FieldName#name, Arguments#args, SelectionSet#ss]
    FAD: [FieldName#name, Arguments#args, Directives#dirs]
    FDS: [FieldName#name, Directives#dirs, SelectionSet#ss]
    FS: [FieldName#name, SelectionSet#ss]
    FD: [FieldName#name, Directives#dirs]
    FA: [FieldName#name, Arguments#args]
    F: [FieldName#name]

FieldName:
    A: [Identifier#name, colon, name#aka]
    N: [Identifier#name]

Identifier:
    I: [name#tok]
    "Mutation": [mutation#tok]
    "Subscription": [subscription#tok]
    "Scalar": [scalar#tok]
    "Schema": [schema#tok]
    "On": [on_#tok]
    "Directive": [directive#tok]
    "Enum": [enum_#tok]
    "Extend": [extend#tok]
    "Input": [input#tok]
    "Interface": [interface_#tok]
    "Implements": [implements#tok]
    "False": [false_#tok]
    "Fragment": [fragment#tok]
    "Query": [query#tok]
    "True": [true_#tok]
    "Type": [type#tok]
    "Null": [null_#tok]
    "Union": [union_#tok]

Arguments:
    List: [lparen, ArgumentList#arg, rparen]
    Empty: [lparen, rparen]

ArgumentList:
    A: [Argument#arg]
    ACS: [Argument#arg, comma, ArgumentList#follow]
    AS: [Argument#arg, ArgumentList#follow]

Argument:
    Name: [name#name, colon, ValueOrVariable#vv]

FragmentDefinition:
    FTDS: [fragment, name#name, on_, name#tc, Directives#dirs,
        SelectionSet#ss]
    FTS: [fragment, name#name, on_, name#tc, SelectionSet#ss]

Directives:
   Dir: [Directive#dir]
   Dirs: [Directive#dir, Directives#follow]

Directive:
    NArg: [at, name#name, Arguments#arg]
    N: [at, name#name]

VariableDefinitions:
    Empty: [lparen, rparen]
    Vars: [lparen, VariableDefinitionList#vars, rparen]

VariableDefinitionList:
    V: [VariableDefinition#var]
    VCF: [VariableDefinition#var, comma, VariableDefinitionList#follow]
    VF: [VariableDefinition#var, VariableDefinitionList#follow]

VariableDefinition:
    VarD: [Variable#var, colon, Type#type, DefaultValue#dvalue]
    Var: [Variable#var, colon, Type#type]

Variable:
    Var: [dollar, name#name]

DefaultValue:
    DV: [equal, Value#value]

ValueOrVariable:
   Val: [Value#val]
   Var: [Variable#var]

Value:
    STR: [stringValue#tok]
    INT: [intValue#tok]
    FLOAT: [floatValue#tok]
    T: [true_#tok]
    F: [false_#tok]
    ARR: [Array#arr]
    O: [ObjectType#obj]
    E: [name#tok]
    N: [null_#tok]

Type:
    TN: [name#tname, exclamation]
    LN: [ListType#list, exclamation]
    T: [name#tname]
    L: [ListType#list]

ListType:
    T: [lbrack, Type#type, rbrack]

Values:
    Val: [Value#val]
    Vals: [Value#val, comma, Values#follow]
    ValsNoComma: [Value#val, Values#follow]

Array:
    Empty: [lbrack, rbrack]
    Value: [lbrack, Values#vals, rbrack]

ObjectValues:
    V: [name#name, colon, ValueOrVariable#val]
    Vsc: [name#name, colon, ValueOrVariable#val, comma, ObjectValues#follow]
    Vs: [name#name, colon, ValueOrVariable#val, ObjectValues#follow]

ObjectType:
    Var: [lcurly, ObjectValues#vals, rcurly]

TypeSystemDefinition:
    S: [SchemaDefinition#sch]
    T: [TypeDefinition#td]
    TE: [TypeExtensionDefinition#ted]
    D: [DirectiveDefinition#dd]
    DS: [Description#des, SchemaDefinition#sch]
    DT: [Description#des, TypeDefinition#td]
    DTE: [Description#des, TypeExtensionDefinition#ted]
    DD: [Description#des, DirectiveDefinition#dd]

TypeDefinition:
    S: [ScalarTypeDefinition#std]
    O: [ObjectTypeDefinition#otd]
    I: [InterfaceTypeDefinition#itd]
    U: [UnionTypeDefinition#utd]
    E: [EnumTypeDefinition#etd]
    IO: [InputObjectTypeDefinition#iod]

SchemaDefinition:
    DO: [schema, Directives#dir, lcurly, OperationTypeDefinitions#otds,
        rcurly]
    O: [schema, lcurly, OperationTypeDefinitions#otds, rcurly]

OperationTypeDefinitions:
    O: [OperationTypeDefinition#otd]
    OCS: [OperationTypeDefinition#otd, comma,
        OperationTypeDefinitions#follow]
    OS: [OperationTypeDefinition#otd, OperationTypeDefinitions#follow]

OperationTypeDefinition:
    O: [OperationType#ot, colon, name#nt]

ScalarTypeDefinition:
    D: [scalar, name#name, Directives#dir]
    S: [scalar, name#name]

ObjectTypeDefinition:
    ID: [type, name#name, ImplementsInterfaces#ii, Directives#dir,
        lcurly, FieldDefinitions#fds, rcurly ]
    I: [type, name#name, ImplementsInterfaces#ii, lcurly,
        FieldDefinitions#fds, rcurly ]
    D: [type, name#name, Directives#dir, lcurly, FieldDefinitions#fds,
        rcurly ]
    F: [type, name#name, lcurly, FieldDefinitions#fds, rcurly ]

FieldDefinitions:
    F: [FieldDefinition#fd]
    FC: [FieldDefinition#fd, comma, FieldDefinitions#follow]
    FNC: [FieldDefinition#fd, FieldDefinitions#follow]

FieldDefinition:
    AD: [Identifier#name, ArgumentsDefinition#arg, colon, Type#typ,
        Directives#dir]
    A: [Identifier#name, ArgumentsDefinition#arg, colon, Type#typ]
    D: [Identifier#name, colon, Type#typ, Directives#dir]
    T: [Identifier#name, colon, Type#typ]
    DAD: [Description#des, Identifier#name, ArgumentsDefinition#arg, colon, Type#typ,
        Directives#dir]
    DA: [Description#des, Identifier#name, ArgumentsDefinition#arg, colon, Type#typ]
    DD: [Description#des, Identifier#name, colon, Type#typ, Directives#dir]
    DT: [Description#des, Identifier#name, colon, Type#typ]

ImplementsInterfaces:
    N: [implements, NamedTypes#nts]

NamedTypes:
    N: [name#name]
    NCS: [name#name, comma, NamedTypes#follow]
    NS: [name#name, NamedTypes#follow]

ArgumentsDefinition:
    A: [lparen, InputValueDefinitions, rparen]
    NA: [lparen, rparen]

InputValueDefinitions:
    I: [InputValueDefinition#iv]
    ICF: [InputValueDefinition#iv, comma, InputValueDefinitions#follow]
    IF: [InputValueDefinition#iv, InputValueDefinitions#follow]

InputValueDefinition:
    TVD: [Identifier#name, colon, Type#type, DefaultValue#df, Directives#dirs]
    TD: [Identifier#name, colon, Type#type, Directives#dirs]
    TV: [Identifier#name, colon, Type#type, DefaultValue#df]
    T: [Identifier#name, colon, Type#type]
    DTVD: [Description#des, Identifier#name, colon, Type#type, DefaultValue#df, Directives#dirs]
    DTD: [Description#des, Identifier#name, colon, Type#type, Directives#dirs]
    DTV: [Description#des, Identifier#name, colon, Type#type, DefaultValue#df]
    DT: [Description#des, Identifier#name, colon, Type#type]

InterfaceTypeDefinition:
    NDF: [interface_, name#name, Directives#dirs, lcurly,
        FieldDefinitions#fds, rcurly]
    NF: [interface_, name#name, lcurly, FieldDefinitions#fds, rcurly]

UnionTypeDefinition:
    NDU: [union_, name#name, Directives#dirs, equal, UnionMembers#um]
    NU: [union_, name#name, equal, UnionMembers#um]

UnionMembers:
    S: [name#name]
    SPF: [name#name, pipe, UnionMembers#follow]
    SF: [name#name, UnionMembers#follow]

EnumTypeDefinition:
    NDE: [enum_, name#name, Directives#dir, lcurly,
        EnumValueDefinitions#evds, rcurly]
    NE: [enum_, name#name, lcurly, EnumValueDefinitions#evds, rcurly]

EnumValueDefinitions:
    D: [EnumValueDefinition#evd]
    DCE: [EnumValueDefinition#evd, comma, EnumValueDefinitions#follow]
    DE: [EnumValueDefinition#evd, EnumValueDefinitions#follow]

EnumValueDefinition:
    ED: [name#name, Directives#dirs]
    E: [name#name]
    DED: [Description#des, name#name, Directives#dirs]
    DE: [Description#des, name#name]

TypeExtensionDefinition:
    O: [extend, ObjectTypeDefinition#otd]

DirectiveDefinition:
    AD: [directive, at, name#name, ArgumentsDefinition#ad, on_,
        DirectiveLocations#dl]
    D: [directive, at, name#name, on_, DirectiveLocations#dl]

DirectiveLocations:
    N: [name#name]
    NPF: [name#name, pipe, DirectiveLocations#follow]
    NF: [name#name, DirectiveLocations#follow]

InputObjectTypeDefinition:
    NDI: [input, name#name, Directives#dirs, lcurly,
        InputValueDefinitions, rcurly]
    NI: [input, name#name, lcurly, InputValueDefinitions, rcurly]

Description:
    S: [stringValue#tok]
