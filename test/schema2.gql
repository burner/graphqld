schema {
	mutation: mutationType
	query: queryType
	subscription: subscriptionType
}
type mutationType { _: Boolean }
type queryType {
	maybeNull: Int
	small: Small
	manysmall: [Small!]!
	neverNull: Int!
	foo: Int!
	bar: Int!
}
type subscriptionType { _: Boolean }
type Small {
	name: String!
	arg(a: Int!): [SmallChild!]!
	id: Int!
	foobar: [SmallChild!]!
}
input SmallIn {
	name: String!
	id: Int!
	foobar: [SmallChildIn!]!
}
type SmallChild {
	foo(a: Int!): Int!
	id: Int!
	name: String!
}
input SmallChildIn {
	id: Int!
	name: String!
}
